syntax = "proto3";

option go_package = "./chat";

package chat;

service ChatGreeter {
    rpc CreateChat(CreateRequestChat) returns (CreateResponseChat);
    rpc GetChat(Empty) returns (GetResponseChat);
    rpc CreateSecondaryKey(CreateSecondaryKeyRequest) returns (CreateSecondaryKeyResponse);
    rpc GetSecondaryKey(GetSecondaryKeyRequest) returns (GetSecondaryKeyResponse);
    rpc GetPublicKey(GetPublicKeyRequest) returns (GetPublicKeyResponse);
}

message CreateRequestChat {
    uint32 other_id = 1;
}

message CreateResponseChat {
    string message = 1;
    Keys keys = 2;
    uint32 chat_id = 3;
}

message Keys {
    string p = 1;
    int64 g = 2;
}

message Empty {}

message GetResponseChat {
    repeated ChatUsers chats = 1;
}

message ChatUsers {
    uint32 id = 1;
    uint32 chat_id = 2;
    uint32 user_id = 3;
    User user = 4;
    string created_at = 5;
    string updated_at = 6;
    Chat chat = 7;
}

message Chat {
    uint32 id = 1;
    Message message = 2;
    string name_chat = 3;
    repeated ChatUsers chat_users = 4;
    // repeated Message messages = 3;
}

message Message {
    uint32 id = 1;
    string created_at = 2;
    string updated_at = 3;
    uint32 user_id = 4;
    uint32 chat_id = 5;
    string text = 6;
}

message User {
    uint32 id = 1;
    string name = 2;
    string email = 3;
}

message CreateSecondaryKeyRequest {
    uint32 chat_id = 1;
    string key = 2;
}

message CreateSecondaryKeyResponse {
    string message = 1; 
}

message GetSecondaryKeyRequest {
    uint32 chat_id = 1;
}

message GetSecondaryKeyResponse {
    string key = 1;
    string p = 2;
}

message GetPublicKeyRequest {
    uint32 chat_id = 1;
}

message GetPublicKeyResponse {
    int64 g = 1;
    string p = 2;
}